name: macOS-local-clang

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    if: ${{!contains(github.event.pull_request.title, 'skip-ci') && !contains(github.event.head_commit.message, 'skip-ci')}}
    strategy:
      matrix:
        build_type: [ Release ]
        os: [macos-12]
        compiler:
          - cc: cc
            cxx: c++

    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}

    env:
      CC: ${{ matrix.compiler.cc }}
      CXX: ${{ matrix.compiler.cxx }}
      LLVM_VERSION: 17.0.2

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install llvm@17
      run: |
        brew install llvm@17
        echo $(brew --prefix llvm@17)/bin >> $GITHUB_PATH

    - name: Install cppsafe
      if: github.event_name == 'pull_request'
      run: brew install qqiangwu/tap/cppship

    - name: Format
      if: github.event_name == 'pull_request'
      run: |
        mergebase=$(git merge-base --fork-point origin/${{github.event.pull_request.base.ref}})
        cppship fmt -c ${mergebase}

    - name: Install conan
      run: pip3 install conan

    - name: Configure CMake
      run: |
        local_clang=$(brew --prefix llvm@17)
        echo "local clang: ${local_clang}"
        cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DLOCAL_CLANG=${local_clang} -DCMAKE_EXPORT_COMPILE_COMMANDS=ON

    - name: Lint
      if: github.event_name == 'pull_request'
      run: |
        mergebase=$(git merge-base --fork-point origin/${{github.event.pull_request.base.ref}})
        clang-tidy --version
        cppship lint -c ${mergebase}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{ matrix.build_type }} -j
